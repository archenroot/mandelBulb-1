//Copyin all camera_params

//#pragma acc data copyin(camera_params[0:1], pix_data[0:1], renderer_params[0:1], mandelBox_params, from, to, width, height, farPoint[0:3], eps)
//,camera_params.camPos[0:3], camera_params.camTarget[0:3], camera_params.camUp[0:3],camera_params.viewport[0:4], camera_params.matModelView[0:16], camera_params.matProjection[0:16], camera_params.matInvProjModel[0:16])
//#pragma acc data copyin(pix_data[0:1], pix_data.hit[0:0], pix_data.normal[0:0])
//#pragma acc data copyin(renderer_params[0:1], renderer_params.file_name[0:80])
//#pragma acc data copyout(image[0:3*width*height])
//#pragma acc data copyin(from, to, width, height, farPoint[0:3], eps) 

/*
  double camPos[3];
  double camTarget[3];
  double camUp[3];
  */
  
  //Deep copy of Camera_params
double* dA, dB, dC, dE, dF, dG;
char* dH;
int* dD;
/*
CameraParams* dP;
RenderParams* dP1;
dP = acc_copyin(camera_params, sizeof(CameraParams));
dP1 = acc_copyin(renderer_params, sizeof(RenderParams));
*/
//dH = acc_copyin(renderer_params.file_name, 80*sizeof(char));


/*


dA = acc_copyin(camera_params.camPos, 3*sizeof(double));
acc_memcpy_to_device(&dP.camPos, &dA,sizeof(double*));

dB = acc_copyin(camera_params.camTarget, 3*sizeof(double));
acc_memcpy_to_device(&dP.camTarget, &dB,sizeof(double*));
	
dC = acc_copyin(camera_params.camUp, 3*sizeof(double));
acc_memcpy_to_device(&dP.camUp, &dc,sizeof(double*));

dD = acc_copyin(camera_params.viewport, 4*sizeof(int));
acc_memcpy_to_device(&dP.viewport, &dD,sizeof(int*));

dE = acc_copyin(camera_params.matModelView, 16*sizeof(double));
acc_memcpy_to_device(&dP.matModelView, &dE,sizeof(double*));

dF = acc_copyin(camera_params.matProjection, 16*sizeof(double));
acc_memcpy_to_device(&dP.matProjection, &dF,sizeof(double*));
	
dG = acc_copyin(camera_params.matInvProjModel, 16*sizeof(double));
acc_memcpy_to_device(&dP.matInvProjModel, &dG,sizeof(double*));
*/
